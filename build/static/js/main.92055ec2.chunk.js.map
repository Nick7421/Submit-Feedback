{"version":3,"sources":["components/FeedbackHeader/FeedbackHeader.js","components/FeedbackReview/FeedbackReview.js","components/FeedbackFeeling/FeedbackFeeling.js","components/FeedbackUnderstanding/FeedbackUnderstanding.js","components/FeedbackSupport/FeedbackSupport.js","components/FeedbackComments/FeedbackComments.js","components/FeedbackSuccess/FeedbackSuccess.js","components/FeedbackHome/FeedbackHome.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["FeedbackHeader","react_default","a","createElement","className","Component","FeedbackReview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitFeedback","axios","method","url","data","reduxStore","feedback","then","response","history","push","catch","error","errorMessage","concat","console","log","state","comments","isEnabled","feeling","understanding","support","disabled","onClick","connect","FeedbackFeeling","handleChange","event","setState","target","value","handleNext","action","type","payload","dispatch","onChange","placeholder","components_FeedbackReview_FeedbackReview","FeedbackUnderstanding","FeedbackSupport","FeedbackComments","alert","FeedbackSuccess","FeedbackHome","startFeedback","App","components_FeedbackHeader_FeedbackHeader","HashRouter","Route","exact","path","component","FeedbackSucess","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","storeInstance","createStore","combineReducers","arguments","length","undefined","objectSpread","applyMiddleware","logger","ReactDOM","render","es","store","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.92055ec2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './../App/App.css';\n\nclass FeedbackHeader extends Component {\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Feedback!</h1>\n          <h4><i>Don't forget it!</i></h4>\n        </header>\n      </div>\n    )\n  }\n}\nexport default FeedbackHeader;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass FeedbackReview extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                comments:'',\n         \n            }\n        \n    }\n    //tested to make sure my reduxStore object is showing correctly before sending to the server\n    // submitFeedback = () =>{\n    //     console.log(this.props.reduxStore.feedback);\n    //     }\n\n    submitFeedback = () => {\n        axios({\n            method: 'POST',\n            url: '/userfeedback',\n            data: this.props.reduxStore.feedback,\n        }).then((response) => {\n            //*******The Following error was resolved by proping history to this component***********/\n            // I am getting an error Here when trying to go to the next page\n            // not sure if it is a timeing issue but it is\n            //saying push is undefined but my data does get to the server and into the database.\n            this.props.history.push('/feedback-success');\n        }).catch((error) => {\n            const errorMessage = `Server error: ${error}`;\n            console.log(errorMessage);\n        })\n    \n    }\n\n  render() {\n\n    // This variable looks at the redux store to return a boolen if comments is empty or completed.\n    const isEnabled = this.props.reduxStore.feedback.comments !== '';\n\n    return (\n      <div>\n        <h1>Review Your Feedback</h1>\n        <p></p>\n        <p>Feelings: {this.props.reduxStore.feedback.feeling}</p>\n        <p>Understanding: {this.props.reduxStore.feedback.understanding}</p>\n        <p>Support: {this.props.reduxStore.feedback.support}</p>\n        <p>Comments: {this.props.reduxStore.feedback.comments}</p>\n        <button disabled={!isEnabled} onClick={this.submitFeedback}>Submit</button>\n      </div>\n    )\n  }\n}\n\n//Below will map and connect this component to the redux store to retrieve state.\nconst mapReduxStoreToProps = (reduxStore) => ({\n    reduxStore: reduxStore\n});\nexport default connect(mapReduxStoreToProps)(FeedbackReview);\n\n","import React, { Component } from 'react';\nimport FeedbackReview from './../FeedbackReview/FeedbackReview';\nimport { connect } from 'react-redux';\n\nclass FeedbackFeeling extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feeling:'',\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            feeling: event.target.value,\n        });\n    }\n    handleNext = (event) => {\n        const action = { type: 'Submit_Feeling_Info', payload: this.state };\n        this.props.dispatch(action);\n        this.props.history.push('/feedback-understanding');\n        \n        }\n  render() {\n   \n\n    return (\n        <div>\n      <div>\n        <h1> How are you feeling today?</h1>\n        <input onChange={this.handleChange}type =\"Number\" placeholder = \"enter a number 1-5 \" value = {this.state.feeling}></input>\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n      <FeedbackReview/>\n      </div>\n    )\n  }\n}\nexport default connect()(FeedbackFeeling);","import React, { Component } from 'react'\nimport FeedbackReview from './../FeedbackReview/FeedbackReview'\nimport { connect } from 'react-redux';\n\nclass FeedbackUnderstanding extends Component {\n  constructor(){\n    super();\n    this.state = {\n      understanding:'',\n  }\n\n}\nhandleChange = (event) => {\n  this.setState({\n      understanding: event.target.value,\n  });\n}\n\nhandleNext = (event) => {\n  const action = { type: 'Submit_Understanding_Info', payload: this.state };\n  this.props.dispatch(action);\n  this.props.history.push('/feedback-support');\n  \n  }\n  render() {\n    return (\n      <div>\n      <div>\n        <h1>How well are you understanding the content?</h1>\n        <input onChange={this.handleChange}type =\"Number\" placeholder = \"enter a number 1-5 \" value = {this.state.understanding}></input>\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n      <FeedbackReview/>\n      </div>\n    )\n  }\n}\nexport default connect()(FeedbackUnderstanding);","import React, { Component } from 'react';\nimport FeedbackReview from './../FeedbackReview/FeedbackReview';\nimport { connect } from 'react-redux';\n\nclass FeedbackSupport extends Component {\n    constructor(){\n        super();\n        this.state = {\n            support: '',\n        }\n    }\n    \n    handleChange = (event) => {\n        this.setState({\n            support: event.target.value,\n        });\n    }\n      \n    handleNext = (event) => {\n        const action = { type: 'Submit_Support_Info', payload: this.state };\n        this.props.dispatch(action);\n        this.props.history.push('/feedback-comments');\n        \n        }\n    \n    render() {\n      \n    return (\n        <div>\n      <div>\n        <h1>How well are you bring supported?</h1>\n        <input onChange={this.handleChange}type =\"Number\" placeholder = \"enter a number 1-5 \" value = {this.state.support}></input>\n        <button onClick={this.handleNext}>Next</button>\n        \n      </div>\n      <FeedbackReview/>\n      </div>\n    )\n  }\n}\nexport default connect()(FeedbackSupport);","import React, { Component } from 'react'\nimport FeedbackReview from './../FeedbackReview/FeedbackReview'\nimport { connect } from 'react-redux';\n\nclass FeedbackComments extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            comments: ''\n        }\n    }\n    handleChange = (event) => {\n        this.setState({\n            comments: event.target.value,\n        });\n        // this.props.FeedbackReview.buttonShow;\n    }\n      \n    handleNext = (event) => {\n        const action = { type: 'Submit_Comments_Info', payload: this.state };\n        this.props.dispatch(action);\n        alert('You can now submit your feedback');\n        }\n  render() {\n    return (\n        <div>\n      <div>\n        <h1>Any comments you want to leave?</h1>\n        <input onChange={this.handleChange}type =\"text\" placeholder = \"enter comments here\" value = {this.state.comments}></input>\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n      <FeedbackReview history = {this.props.history}/>\n      </div>\n    )\n  }\n}\nexport default connect() (FeedbackComments);","import React, { Component } from 'react'\n\nclass FeedbackSuccess extends Component {\n    handleChange = () => {\n        this.props.history.push('/');\n\n    }\n  render() {\n\n    return (\n      <div>\n        <h1>Feedback Has Been Submitted</h1>\n        <p></p>\n        <h3>Thank you!</h3>\n        <p></p>\n        <h4>Please click below to submit new feedback</h4>\n        <button onClick ={this.handleChange}>Leave New Feedback</button>\n      </div>\n    )\n  }\n}\nexport default FeedbackSuccess;","import React, { Component } from 'react'\n\n class FeedbackHome extends Component {\n    startFeedback = () =>{\n        this.props.history.push('/feedback-feeling');\n    }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.startFeedback}>Click here to Start Feeback</button>\n      </div>\n    )\n  }\n}\nexport default FeedbackHome","import React, { Component } from 'react';\nimport { HashRouter as Router,Route } from 'react-router-dom';\n\n//Components needed for the routing pages\nimport './App.css';\nimport FeedbackHeader from './../FeedbackHeader/FeedbackHeader';\nimport FeedbackFeeling from './../FeedbackFeeling/FeedbackFeeling.js';\nimport FeedbackUnderstanding from '../FeedbackUnderstanding/FeedbackUnderstanding.js';\nimport FeedbackSupport from './../FeedbackSupport/FeedbackSupport.js';\nimport FeedbackComments from './../FeedbackComments/FeedbackComments.js';\nimport FeedbackSucess from './../FeedbackSuccess/FeedbackSuccess.js';\nimport FeedbackHome from './../FeedbackHome/FeedbackHome.js';\nimport FeedbackReview from './../FeedbackReview/FeedbackReview.js';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FeedbackHeader/>\n        <br/>\n      <Router>\n        <div>\n      <Route exact path =\"/\" component={FeedbackHome}/>\n      <Route exact path =\"/feedback-feeling\" component={FeedbackFeeling}/>\n      <Route exact path =\"/feedback-understanding\" component={FeedbackUnderstanding}/>\n      <Route exact path =\"/feedback-support\" component={FeedbackSupport}/>\n      <Route exact path =\"/feedback-comments\" component={FeedbackComments}/>\n      <Route exact path =\"/feedback-success\" component={FeedbackSucess}/>\n      <Route exact path =\"/feedback-review\" component ={FeedbackReview}/>\n        </div>\n      </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\n\nconst feedback = (state = {comments:'',}, action) => {\n    if(action.type === \"Submit_Feeling_Info\") {\n        //update this too\n        return {...state,...action.payload};\n    }\n    else if(action.type === \"Submit_Understanding_Info\"){\n        //this will update the current state with the payload\n        return {...state,...action.payload};\n    }\n    else if(action.type === \"Submit_Support_Info\"){\n        //this will update the current state with the payload\n        return {...state,...action.payload};\n    }\n    else if(action.type ===\"Submit_Comments_Info\")\n\n        return {...state,...action.payload};\n    return state;\n}\n\n\nconst storeInstance = createStore(\n    combineReducers({\n        feedback,\n    }),\n    applyMiddleware(logger),\n);\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}